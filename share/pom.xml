<?xml version="1.0" encoding="UTF-8"?>
<!-- This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this
   - file, You can obtain one at https://mozilla.org/MPL/2.0/. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.aldica</groupId>
        <artifactId>aldica-parent</artifactId>
        <version>1.0.0</version>
    </parent>

    <artifactId>aldica-share-ignite</artifactId>
    <name>Alternative/Alfresco Distributed Cache - Share Ignite Module</name>
    <description>Share-tier addon to provide Ignite-based distributed caching and data grid capabilities</description>

    <properties>
        <project.basePackage>org.aldica.share.ignite</project.basePackage>
        <docker.tests.versionSpecificJavaOpts></docker.tests.versionSpecificJavaOpts>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${surf.groupId}</groupId>
                <artifactId>spring-surf</artifactId>
                <version>${surf.share.api.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>${aldica.ignite-common.artifactId}</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>${aldica.ignite-repo.artifactId}</artifactId>
                <version>${project.version}</version>
                <classifier>installable</classifier>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>${aldica.ignite-common.artifactId}</artifactId>
        </dependency>

        <dependency>
            <groupId>de.acosix.alfresco.utility</groupId>
            <artifactId>de.acosix.alfresco.utility.core.repo</artifactId>
            <classifier>installable</classifier>
        </dependency>

        <dependency>
            <groupId>de.acosix.alfresco.utility</groupId>
            <artifactId>de.acosix.alfresco.utility.core.share</artifactId>
        </dependency>

        <dependency>
            <groupId>de.acosix.alfresco.utility</groupId>
            <artifactId>de.acosix.alfresco.utility.core.share</artifactId>
            <classifier>installable</classifier>
        </dependency>

        <dependency>
            <groupId>org.alfresco</groupId>
            <artifactId>share</artifactId>
            <classifier>classes</classifier>
        </dependency>

        <dependency>
            <groupId>${surf.groupId}</groupId>
            <artifactId>spring-surf</artifactId>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>${aldica.ignite-repo.artifactId}</artifactId>
            <classifier>installable</classifier>
        </dependency>
    </dependencies>

    <build>

        <pluginManagement>
            <plugins>

                <!-- some image customisations -->
                <!-- Maven + docker-maven-plugin result in somewhat weird inheritance handling -->
                <!-- (relying on positional order of images for overrides) -->
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <configuration>
                        <sourceDirectory>src/test/docker</sourceDirectory>
                        <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
                        <images>
                            <image>
                                <!-- no change to postgres image (first image in parent POM) -->
                            </image>
                            <image>
                                <run>
                                    <!-- override JAVA_OPTS -->
                                    <env>
                                        <JAVA_OPTS><![CDATA[
                                            ${docker.tests.repositoryCommonJavaOpts}
                                            -D${moduleId}.core.local.host=repository
                                        ]]></JAVA_OPTS>
                                    </env>
                                    <!-- add log directory mount to just the contentstore -->
                                    <!-- (cannot be done in parent POM due to hard requirement on specific project structure -->
                                    <volumes>
                                        <bind>
                                            <volume>${moduleId}-repository-test-contentstore:/usr/local/tomcat/alf_data</volume>
                                            <volume>${project.build.directory}/docker/repository-1-logs:/usr/local/tomcat/logs</volume>
                                        </bind>
                                    </volumes>
                                </run>
                            </image>
                            <image>
                                <run>
                                    <env>
                                        <REPO_HOST>repository</REPO_HOST>
                                        <REPO_PORT>8080</REPO_PORT>
                                        <CATALINA_OPTS><![CDATA[
                                            ${docker.tests.shareCommonJavaOpts}
                                            -D${moduleId}.core.local.id=share
                                            -D${moduleId}.core.local.host=share
                                            -D${moduleId}.core.initialMembers=share,share-2
                                        ]]></CATALINA_OPTS>
                                    </env>
                                    <volumes>
                                        <bind>
                                            <volume>${project.build.directory}/docker/share-1-logs:/usr/local/tomcat/logs</volume>
                                        </bind>
                                    </volumes>
                                </run>
                            </image>
                            <image>
                                <!-- no customisation to SOLR image (4th image in parent POM) -->
                                <!-- we don't use SOLR in this sub-module -->
                            </image>
                            <image>
                                <!-- add another Repository image -->
                                <name>${moduleId}-repository-test</name>
                                <alias>repository-2</alias>
                                <build>
                                    <skip>true</skip>
                                </build>
                                <run>
                                    <skip>${docker.tests.skipRepositoryImage}</skip>
                                    <hostname>repository-2</hostname>
                                    <env>
                                        <JAVA_OPTS><![CDATA[
                                            ${docker.tests.repositoryCommonJavaOpts}
                                            -D${moduleId}.core.local.host=repository-2
                                        ]]></JAVA_OPTS>
                                    </env>
                                    <ports>
                                        <port>${docker.tests.repositoryPort2}:8080</port>
                                        <port>${docker.tests.repositoryDebugPort2}:${docker.tests.repositoryDebugPort}</port>
                                    </ports>
                                    <network>
                                        <mode>custom</mode>
                                        <name>${moduleId}-test</name>
                                        <alias>repository-2</alias>
                                    </network>
                                    <volumes>
                                        <bind>
                                            <volume>${moduleId}-repository-test-contentstore:/usr/local/tomcat/alf_data</volume>
                                            <volume>${project.build.directory}/docker/repository-2-logs:/usr/local/tomcat/logs</volume>
                                        </bind>
                                    </volumes>
                                    <dependsOn>
                                        <container>postgres</container>
                                    </dependsOn>
                                    <wait>
                                        <http>
                                            <url>http://localhost:${docker.tests.repositoryPort2}/alfresco/favicon.ico</url>
                                            <method>GET</method>
                                            <status>200</status>
                                        </http>
                                        <time>${docker.tests.repositoryStartupWaitTime}</time>
                                    </wait>
                                </run>
                            </image>
                            <image>
                                <!-- add another Share image -->
                                <name>${moduleId}-share-test</name>
                                <alias>share-2</alias>
                                <build>
                                    <skip>true</skip>
                                </build>
                                <run>
                                    <skip>${docker.tests.skipShareImage}</skip>
                                    <hostname>share-2</hostname>
                                    <env>
                                        <REPO_HOST>repository-2</REPO_HOST>
                                        <REPO_PORT>8080</REPO_PORT>
                                        <CATALINA_OPTS><![CDATA[
                                            ${docker.tests.shareCommonJavaOpts}
                                            -D${moduleId}.core.local.id=share-2
                                            -D${moduleId}.core.local.host=share-2
                                            -D${moduleId}.core.initialMembers=share,share-2
                                        ]]></CATALINA_OPTS>
                                    </env>
                                    <ports>
                                        <port>${docker.tests.sharePort2}:8080</port>
                                        <port>${docker.tests.shareDebugPort2}:${docker.tests.shareDebugPort}</port>
                                    </ports>
                                    <network>
                                        <mode>custom</mode>
                                        <name>${moduleId}-test</name>
                                        <alias>share-2</alias>
                                    </network>
                                    <volumes>
                                        <bind>
                                            <volume>${project.build.directory}/docker/share-2-logs:/usr/local/tomcat/logs</volume>
                                        </bind>
                                    </volumes>
                                    <dependsOn>
                                        <container>repository-2</container>
                                    </dependsOn>
                                    <wait>
                                        <http>
                                            <url>http://localhost:${docker.tests.sharePort2}/share/res/favicon.ico</url>
                                            <method>GET</method>
                                            <status>200</status>
                                        </http>
                                        <time>${docker.tests.shareStartupWaitTime}</time>
                                    </wait>
                                </run>
                            </image>
                        </images>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>yuicompressor-maven-plugin</artifactId>
            </plugin>

            <!-- Explicitly enable Docker use (can't be done in Acosix parent POM without enabling it for all POMs,
                even if Docker use is not relevant, e.g. in intermediate parent POMs) -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
            </plugin>
        </plugins>

    </build>

</project>