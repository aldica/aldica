# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

${moduleId}.core.name=repositoryGrid
${moduleId}.core.login=repository
${moduleId}.core.password=repositoryGrid-dev
${moduleId}.core.local.id=
${moduleId}.core.local.host=
${moduleId}.core.public.host=
${moduleId}.core.public.time.port=
${moduleId}.core.local.time.port=47120
${moduleId}.core.local.time.portRange=0
${moduleId}.core.initialMembers=

${moduleId}.core.public.disco.port=
${moduleId}.core.local.disco.port=47110
${moduleId}.core.local.disco.portRange=0
# Ignite default is 0
${moduleId}.core.local.disco.joinTimeout=0
# Ignite default is 5000
${moduleId}.core.local.disco.ackTimeout=5000
# Ignite default is 5000
${moduleId}.core.local.disco.socketTimeout=5000
# Ignite default is 5000, we grant more time to complete operations (e.g. join)
${moduleId}.core.local.disco.networkTimeout=15000

${moduleId}.core.public.comm.port=
${moduleId}.core.local.comm.port=47100
${moduleId}.core.local.comm.portRange=0
# Ignite default is 0, set to 10000 to avoid OOME (and avoid one of the startup WARN messages)
${moduleId}.core.local.comm.messageQueueLimit=10000
# defaults are 5000 and 600000 (quite significant)
# this can cause long join/startup/rebalance scenarios, especially in NATed / Dockerised / Kubernetes environments with unreachable, internal addresses
${moduleId}.core.local.comm.connectTimeout=1000
${moduleId}.core.local.comm.maxConnectTimeout=10000
# Ignite default is 2000
${moduleId}.core.local.comm.socketWriteTimeout=2000
# Ignite default is 1
${moduleId}.core.local.comm.connectionsPerNode=1
# Ignite default is false, might need to be changed in NATed / Dockerised / Kubernetes environment to avoid connection attempts to unreachable, internal addresses
${moduleId}.core.local.comm.filterReachableAddresses=false

${moduleId}.core.failureDetectionTimeout=10000
${moduleId}.core.systemWorkerBlockedTimeout=\${${moduleId}.core.failureDetectionTimeout}

# default is actually Math.max(8, #available_proc_count)
${moduleId}.core.publicThreadPoolSize=8
# Ignite default is same as public thread pool size
${moduleId}.core.serviceThreadPoolSize=\${${moduleId}.core.publicThreadPoolSize}
# Ignite default is same as public thread pool size
${moduleId}.core.systemThreadPoolSize=\${${moduleId}.core.publicThreadPoolSize}
# despite no intention to use any IgniteAsyncCallback we have to allow pool of 1 thread (default = public thread pool size)
${moduleId}.core.asyncCallbackThreadPoolSize=1
# Ignite default is 4
${moduleId}.core.managementThreadPoolSize=4
# despite p2p being disabled we have to allow pool of 1 thread (default 2)
${moduleId}.core.peerClassLoadingThreadPoolSize=1
# despite not using igfs we have to allow pool of 1 thread (default = #available_proc_count)
${moduleId}.core.igfsThreadPoolSize=1
# Ignite default is same as public thread pool size
${moduleId}.core.dataStreamerThreadPoolSize=\${${moduleId}.core.publicThreadPoolSize}
# Ignite default is same as public thread pool size
${moduleId}.core.utilityCacheThreadPoolSize=\${${moduleId}.core.publicThreadPoolSize}
# despite not using query we have to allow pool of 1 thread (default = public thread pool size)
${moduleId}.core.queryThreadPoolSize=1
# Ignite default is 1
${moduleId}.core.rebalanceThreadPoolSize=1

# 8K page size, 20 - 40 MiB system storage, 1 - 16 GiB default storage
${moduleId}.core.storage.pageSize=8192
${moduleId}.core.storage.systemInitialSize=20971520
${moduleId}.core.storage.systemMaxSize=41943040
${moduleId}.core.storage.defaultStorageRegion.initialSize=1073741824
${moduleId}.core.storage.defaultStorageRegion.maxSize=17179869184
${moduleId}.core.storage.defaultStorageRegion.swapPath=\${java.io.tmpdir}/${moduleId}/defaultDataRegionSwap

# though we will never perform any kind of serialisation, binary type configuration should be identical to repository
# QName contains fields not relevant for serialisation / cache key handling in Ignite B-tree
${moduleId}.core.binary.type.org.alfresco.service.namespace.QName.serializer=Configuration.${moduleId}.core.binary.serializer.configurableRelevantFields
${moduleId}.core.binary.relevantFields.org.alfresco.service.namespace.QName=namespaceURI,localName