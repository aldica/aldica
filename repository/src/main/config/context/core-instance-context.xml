<?xml version='1.0' encoding='UTF-8'?>
<!-- This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this
   - file, You can obtain one at https://mozilla.org/MPL/2.0/. -->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <bean id="${moduleId}-predefinedBeansEnabler"
        class="de.acosix.alfresco.utility.common.spring.BeanDeAbstractifyingBeanDefinitionRegistryPostProcessor">
        <property name="enabledPropertyKeys">
            <list>
                <value>${moduleId}.core.enabled</value>
            </list>
        </property>
        <property name="propertiesSource" ref="global-properties" />
        <property name="targetBeanNamePattern" value="^[A-Z][a-zA-Z]+\.${moduleId}\..+$" />
    </bean>

    <bean id="Configuration.${moduleId}.jobs" abstract="true" class="org.springframework.scheduling.quartz.SchedulerAccessorBean">
        <property name="scheduler" ref="schedulerFactory" />
        <property name="triggers">
            <list>
                <ref bean="DiscoverySPI.${moduleId}.core.MemberFinder.refreshJobTrigger" />
            </list>
        </property>
    </bean>

    <bean id="Configuration.${moduleId}.core" abstract="true" class="org.apache.ignite.configuration.IgniteConfiguration">
        <property name="discoverySpi" ref="DiscoverySPI.${moduleId}.core" />
        <property name="addressResolver" ref="AddressResolver.${moduleId}.core" />
        <property name="communicationSpi" ref="CommunicationSPI.${moduleId}.core" />
        <property name="collisionSpi" ref="CollisionSPI.${moduleId}.core" />
        <property name="gridLogger" ref="Misc.${moduleId}.core.logger" />
        <property name="igniteInstanceName" value="\${${moduleId}.core.name}" />
        <property name="consistentId" value="\${${moduleId}.core.local.id}" />
        <property name="localHost" value="\${${moduleId}.core.local.host}" />
        <property name="workDirectory" value="\${java.io.tmpdir}/IgniteWork" />
        <property name="metricsExpireTime" value="1200000" />
        <property name="metricsLogFrequency" value="600000" />
        <property name="peerClassLoadingEnabled" value="false" />
        <property name="connectorConfiguration">
            <null />
        </property>
        <property name="failureDetectionTimeout" value="\${${moduleId}.core.failureDetectionTimeout}" />
        <property name="systemWorkerBlockedTimeout" value="\${${moduleId}.core.systemWorkerBlockedTimeout}" />
        <property name="segmentationPolicy" value="NOOP" />
        <property name="includeEventTypes">
            <!-- TODO: Have dynamic feature configurations to add / remove included event types -->
            <list>
                <!-- discovery events -->
                <value>10</value> <!-- node joined -->
                <value>11</value> <!-- node left -->
                <value>12</value> <!-- node failed -->
                <value>13</value> <!-- node metrics updated -->
                <value>14</value> <!-- node segmented -->
            </list>
        </property>
        <property name="pluginProviders">
            <list>
                <ref bean="PluginProvider.${moduleId}.core.security" />
            </list>
        </property>

        <property name="publicThreadPoolSize" value="\${${moduleId}.core.publicThreadPoolSize}" />
        <property name="stripedPoolSize" value="\${${moduleId}.core.stripedThreadPoolSize}" />
        <property name="serviceThreadPoolSize" value="\${${moduleId}.core.serviceThreadPoolSize}" />
        <property name="systemThreadPoolSize" value="\${${moduleId}.core.systemThreadPoolSize}" />
        <property name="asyncCallbackPoolSize" value="\${${moduleId}.core.asyncCallbackThreadPoolSize}" />
        <property name="managementThreadPoolSize" value="\${${moduleId}.core.managementThreadPoolSize}" />
        <property name="peerClassLoadingThreadPoolSize" value="\${${moduleId}.core.peerClassLoadingThreadPoolSize}" />
        <property name="igfsThreadPoolSize" value="\${${moduleId}.core.igfsThreadPoolSize}" />
        <property name="dataStreamerThreadPoolSize" value="\${${moduleId}.core.dataStreamerThreadPoolSize}" />
        <property name="utilityCachePoolSize" value="\${${moduleId}.core.utilityCacheThreadPoolSize}" />
        <property name="queryThreadPoolSize" value="\${${moduleId}.core.queryThreadPoolSize}" />
        <property name="rebalanceThreadPoolSize" value="\${${moduleId}.core.rebalanceThreadPoolSize}" />

        <property name="timeServerPortBase" value="\${${moduleId}.core.local.time.port}" />
        <property name="timeServerPortRange" value="\${${moduleId}.core.local.time.portRange}" />

        <property name="cacheConfiguration">
            <list>
                <ref bean="Configuration.${moduleId}.core.webSessionCache" />
            </list>
        </property>
        <property name="binaryConfiguration" ref="Configuration.${moduleId}.core.binary" />
        <property name="dataStorageConfiguration" ref="Configuration.${moduleId}.core.storage" />

        <property name="userAttributes">
            <map>
                <entry key="${moduleId}.tier" value="repository" />
                <entry key="${moduleId}.role" value="repository-server" />
            </map>
        </property>
    </bean>

    <bean id="Configuration.${moduleId}.core.binary" abstract="true" class="org.apache.ignite.configuration.BinaryConfiguration" />

    <bean id="Configuration.${moduleId}.core.binary.serializer.configurableRelevantFields" abstract="true"
        class="${aldica.ignite-common.basePackage}.binary.SelectivelyReflectiveBinarySerializer">
        <property name="relevantFieldsProvider">
            <bean class="${aldica.ignite-common.basePackage}.binary.ConfigurableSerializationRelevantFieldsProvider">
                <property name="basePropertyKey" value="${moduleId}.core.binary.relevantFields" />
                <property name="propertiesSource" ref="global-properties" />
            </bean>
        </property>
    </bean>

    <bean id="Configuration.${moduleId}.core.binary.serializer.alfresco.optimisedTxnCacheRegionKey" abstract="true"
        class="${project.basePackage}.binary.TransactionalCacheRegionKeyBinarySerializer">
        <property name="useRawSerialForm" value="\${${moduleId}.core.binary.optimisation.txnCacheKey.useRawSerial}" />
        <property name="useOptimisedString" value="\${${moduleId}.core.binary.optimisation.txnCacheKey.useOptimisedString}" />
        <property name="useVariableLengthPrimitives"
            value="\${${moduleId}.core.binary.optimisation.txnCacheKey.useVariableLengthPrimitives}" />
    </bean>

    <bean id="Configuration.${moduleId}.core.binary.serializer.alfresco.optimisedCacheRegionKey" abstract="true"
        class="${project.basePackage}.binary.CacheRegionKeyBinarySerializer">
        <property name="useRawSerialForm" value="\${${moduleId}.core.binary.optimisation.cacheKey.useRawSerial}" />
        <property name="useOptimisedString" value="\${${moduleId}.core.binary.optimisation.cacheKey.useOptimisedString}" />
        <property name="useVariableLengthPrimitives"
            value="\${${moduleId}.core.binary.optimisation.cacheKey.useVariableLengthPrimitives}" />
    </bean>

    <bean id="Configuration.${moduleId}.core.binary.serializer.alfresco.optimisedCacheRegionValueKey" abstract="true"
        class="${project.basePackage}.binary.CacheRegionValueKeyBinarySerializer">
        <property name="useRawSerialForm" value="\${${moduleId}.core.binary.optimisation.cacheValueKey.useRawSerial}" />
        <property name="useOptimisedString" value="\${${moduleId}.core.binary.optimisation.cacheValueKey.useOptimisedString}" />
        <property name="useVariableLengthPrimitives"
            value="\${${moduleId}.core.binary.optimisation.cacheValueKey.useVariableLengthPrimitives}" />
    </bean>

    <bean id="Configuration.${moduleId}.core.binary.serializer.alfresco.optimisedStoreRef" abstract="true"
        class="${project.basePackage}.binary.StoreRefBinarySerializer">
        <property name="useRawSerialForm" value="\${${moduleId}.core.binary.optimisation.storeRef.useRawSerial}" />
        <property name="useOptimisedString" value="\${${moduleId}.core.binary.optimisation.storeRef.useOptimisedString}" />
        <property name="useVariableLengthPrimitives"
            value="\${${moduleId}.core.binary.optimisation.storeRef.useVariableLengthPrimitives}" />
    </bean>

    <bean id="Configuration.${moduleId}.core.binary.serializer.alfresco.optimisedNodeRef" abstract="true"
        class="${project.basePackage}.binary.NodeRefBinarySerializer">
        <property name="useRawSerialForm" value="\${${moduleId}.core.binary.optimisation.nodeRef.useRawSerial}" />
        <property name="useOptimisedString" value="\${${moduleId}.core.binary.optimisation.nodeRef.useOptimisedString}" />
        <property name="useVariableLengthPrimitives"
            value="\${${moduleId}.core.binary.optimisation.nodeRef.useVariableLengthPrimitives}" />
    </bean>

    <bean id="Configuration.${moduleId}.core.binary.serializer.alfresco.optimisedQName" abstract="true"
        class="${project.basePackage}.binary.QNameBinarySerializer">
        <property name="useRawSerialForm" value="\${${moduleId}.core.binary.optimisation.qname.useRawSerial}" />
        <property name="useOptimisedString" value="\${${moduleId}.core.binary.optimisation.qname.useOptimisedString}" />
        <property name="useVariableLengthPrimitives"
            value="\${${moduleId}.core.binary.optimisation.qname.useVariableLengthPrimitives}" />
    </bean>

    <bean id="Configuration.${moduleId}.core.binary.serializer.alfresco.optimisedMLText" abstract="true"
        class="${project.basePackage}.binary.MLTextBinarySerializer">
        <property name="useIdsWhenReasonable" value="\${${moduleId}.core.binary.optimisation.mlText.useIdsWhenReasonable}" />
        <property name="useRawSerialForm" value="\${${moduleId}.core.binary.optimisation.mlText.useRawSerial}" />
        <property name="useOptimisedString" value="\${${moduleId}.core.binary.optimisation.mlText.useOptimisedString}" />
        <property name="useVariableLengthPrimitives"
            value="\${${moduleId}.core.binary.optimisation.mlText.useVariableLengthPrimitives}" />
        <property name="handleNegativeIds" value="\${${moduleId}.core.binary.optimisation.mlText.handleNegativeIds}" />
    </bean>

    <bean id="Configuration.${moduleId}.core.binary.serializer.alfresco.optimisedContentData" abstract="true"
        class="${project.basePackage}.binary.ContentDataBinarySerializer">
        <property name="useIdsWhenReasonable" value="\${${moduleId}.core.binary.optimisation.contentData.useIdsWhenReasonable}" />
        <property name="useRawSerialForm" value="\${${moduleId}.core.binary.optimisation.contentData.useRawSerial}" />
        <property name="useOptimisedString" value="\${${moduleId}.core.binary.optimisation.contentData.useOptimisedString}" />
        <property name="useVariableLengthPrimitives"
            value="\${${moduleId}.core.binary.optimisation.contentData.useVariableLengthPrimitives}" />
        <property name="handleNegativeIds" value="\${${moduleId}.core.binary.optimisation.contentData.handleNegativeIds}" />
        <property name="handle128PiBFileSizes" value="\${${moduleId}.core.binary.optimisation.contentData.handle128PiBFileSizes}" />
        <property name="handle2EiBFileSizes" value="\${${moduleId}.core.binary.optimisation.contentData.handle2EiBFileSizes}" />
    </bean>

    <bean id="Configuration.${moduleId}.core.binary.serializer.alfresco.optimisedModuleVersionNumber" abstract="true"
        class="${project.basePackage}.binary.ModuleVersionNumberBinarySerializer">
        <property name="useRawSerialForm" value="\${${moduleId}.core.binary.optimisation.moduleVersionNumber.useRawSerial}" />
        <property name="useOptimisedString" value="\${${moduleId}.core.binary.optimisation.moduleVersionNumber.useOptimisedString}" />
        <property name="useVariableLengthPrimitives"
            value="\${${moduleId}.core.binary.optimisation.moduleVersionNumber.useVariableLengthPrimitives}" />
    </bean>

    <bean id="Configuration.${moduleId}.core.binary.serializer.alfresco.optimisedNodeAspects" abstract="true"
        class="${project.basePackage}.binary.NodeAspectsBinarySerializer">
        <property name="useIdsWhenReasonable" value="\${${moduleId}.core.binary.optimisation.nodeAspects.useIdsWhenReasonable}" />
        <property name="useRawSerialForm" value="\${${moduleId}.core.binary.optimisation.nodeAspects.useRawSerial}" />
        <property name="useOptimisedString" value="\${${moduleId}.core.binary.optimisation.nodeAspects.useOptimisedString}" />
        <property name="useVariableLengthPrimitives"
            value="\${${moduleId}.core.binary.optimisation.nodeAspects.useVariableLengthPrimitives}" />
        <property name="handleNegativeIds" value="\${${moduleId}.core.binary.optimisation.nodeAspects.handleNegativeIds}" />
    </bean>

    <bean id="Configuration.${moduleId}.core.binary.serializer.alfresco.optimisedNodeProperties" abstract="true"
        class="${project.basePackage}.binary.NodePropertiesBinarySerializer">
        <property name="useIdsWhenReasonable" value="\${${moduleId}.core.binary.optimisation.nodeProperties.useIdsWhenReasonable}" />
        <property name="useIdsWhenPossible" value="\${${moduleId}.core.binary.optimisation.nodeProperties.useIdsWhenPossible}" />
        <property name="useRawSerialForm" value="\${${moduleId}.core.binary.optimisation.nodeProperties.useRawSerial}" />
        <property name="useOptimisedString" value="\${${moduleId}.core.binary.optimisation.nodeProperties.useOptimisedString}" />
        <property name="useVariableLengthPrimitives"
            value="\${${moduleId}.core.binary.optimisation.nodeProperties.useVariableLengthPrimitives}" />
        <property name="handleNegativeIds" value="\${${moduleId}.core.binary.optimisation.nodeProperties.handleNegativeIds}" />
    </bean>

    <bean id="Configuration.${moduleId}.core.binary.binaryTypeConfigurationBeanEmitter"
        class="${aldica.ignite-common.basePackage}.spring.BinaryTypeConfigurationBeanDefinitionEmitter">
        <property name="enabledPropertyKey" value="${moduleId}.core.enabled" />
        <property name="propertyPrefix" value="${moduleId}.core.binary.type." />
        <property name="binaryConfigurationBeanDefinitionName">
            <idref bean="Configuration.${moduleId}.core.binary" />
        </property>
        <property name="binaryTypeConfigurationBeanDefinitionNamePrefix" value="Configuration.${moduleId}.core.binary.type." />
        <property name="instanceNameProperty" value="${moduleId}.core.name" />
        <property name="propertiesSource" ref="global-properties" />
    </bean>

    <bean id="Configuration.${moduleId}.core.storage" abstract="true" class="org.apache.ignite.configuration.DataStorageConfiguration">
        <property name="defaultDataRegionConfiguration" ref="Configuration.${moduleId}.core.storage.defaultDataRegion" />

        <property name="pageSize" value="\${${moduleId}.core.storage.pageSize}" />
        <property name="systemRegionInitialSize" value="\${${moduleId}.core.storage.systemInitialSize}" />
        <property name="systemRegionMaxSize" value="\${${moduleId}.core.storage.systemMaxSize}" />
    </bean>

    <bean id="Configuration.${moduleId}.core.storage.dataRegionBeanEmitter"
        class="${aldica.ignite-common.basePackage}.spring.DataRegionBeanDefinitionEmitter">
        <property name="enabledPropertyKey" value="${moduleId}.core.enabled" />
        <property name="propertyPrefix" value="${moduleId}.core.storage.region." />
        <property name="storageBeanDefinitionName">
            <idref bean="Configuration.${moduleId}.core.storage" />
        </property>
        <property name="dataRegionBeanDefinitionNamePrefix" value="Configuration.${moduleId}.core.storage.region." />
        <property name="instanceNameProperty" value="${moduleId}.core.name" />
        <property name="propertiesSource" ref="global-properties" />
    </bean>

    <bean id="Configuration.${moduleId}.core.storage.defaultDataRegion" abstract="true"
        class="org.apache.ignite.configuration.DataRegionConfiguration">
        <property name="name" value="\${${moduleId}.core.name}.defaultDataRegion" />
        <property name="initialSize" value="\${${moduleId}.core.storage.defaultStorageRegion.initialSize}" />
        <property name="maxSize" value="\${${moduleId}.core.storage.defaultStorageRegion.maxSize}" />
        <property name="metricsEnabled" value="true" />

        <property name="swapPath" value="\${${moduleId}.core.storage.defaultStorageRegion.swapPath}" />
        <property name="pageEvictionMode" value="RANDOM_2_LRU" />
    </bean>

    <bean id="Configuration.${moduleId}.core.webSessionCache" abstract="true"
        class="org.apache.ignite.configuration.CacheConfiguration">
        <property name="evictionPolicyFactory" ref="Configuration.${moduleId}.core.webSessionCache.evictionPolicyFactory" />
        <property name="name" value="\${${moduleId}.webSessionCache.cacheName}" />
        <property name="cacheMode" value="\${${moduleId}.webSessionCache.cacheMode}" />
        <property name="affinity">
            <bean class="org.apache.ignite.cache.affinity.rendezvous.RendezvousAffinityFunction">
                <property name="excludeNeighbors" value="false" />
                <property name="partitions" value="\${${moduleId}.caches.partitionsCount}" />
            </bean>
        </property>
        <property name="readFromBackup" value="true" />
        <property name="onheapCacheEnabled" value="true" />
    </bean>

    <bean id="Configuration.${moduleId}.core.webSessionCache.evictionPolicyFactory" abstract="true"
        class="org.apache.ignite.cache.eviction.lru.LruEvictionPolicyFactory">
        <property name="maxSize" value="\${${moduleId}.webSessionCache.maxSize}" />
    </bean>

    <bean id="DiscoverySPI.${moduleId}.core" abstract="true"
        class="${aldica.ignite-common.basePackage}.discovery.CredentialsAwareTcpDiscoverySpi">
        <property name="ipFinder" ref="DiscoverySPI.${moduleId}.core.MemberFinder" />
        <property name="credentials" ref="DiscoverySPI.${moduleId}.core.credentials" />

        <property name="localPort" value="\${${moduleId}.core.local.disco.port}" />
        <property name="localPortRange" value="\${${moduleId}.core.local.disco.portRange}" />
        <property name="joinTimeout" value="\${${moduleId}.core.local.disco.joinTimeout}" />
        <property name="ackTimeout" value="\${${moduleId}.core.local.disco.ackTimeout}" />
        <property name="socketTimeout" value="\${${moduleId}.core.local.disco.socketTimeout}" />
        <property name="networkTimeout" value="\${${moduleId}.core.local.disco.networkTimeout}" />
    </bean>

    <bean id="DiscoverySPI.${moduleId}.core.MemberFinder" abstract="true"
        class="${aldica.ignite-common.basePackage}.discovery.MemberTcpDiscoveryIpFinder">
        <property name="shared" value="true" />
        <property name="initialMembers" value="\${${moduleId}.core.initialMembers}" />
    </bean>

    <bean id="DiscoverySPI.${moduleId}.core.MemberAddressRegistrar" abstract="true"
        class="${project.basePackage}.discovery.MemberAddressRegistrarImpl">
        <property name="transactionService" ref="TransactionService" />
        <property name="jobLockService" ref="JobLockService" />
        <property name="attributeService" ref="AttributeService" />
        <property name="configuration" ref="Configuration.${moduleId}.core" />
        <property name="ipFinder" ref="DiscoverySPI.${moduleId}.core.MemberFinder" />
        <property name="instanceName" value="\${${moduleId}.core.name}" />
    </bean>

    <bean id="DiscoverySPI.${moduleId}.core.MemberFinder.refreshJobTrigger" abstract="true"
        class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="cronExpression" value="\${${moduleId}.core.local.disco.registrationRefresh.cron}" />
        <!-- system.cronJob.startDelayMilliseconds is only available in 6.0+, so we need the default value to be 5.x compatible -->
        <property name="startDelay" value="${system.cronJob.startDelayMilliseconds:60000}" />
        <property name="jobDetail">
            <bean id="DiscoverySPI.${moduleId}.core.MemberFinder.refreshJobDetail"
                class="de.acosix.alfresco.utility.repo.job.GenericJobDetailsFactoryBean">
                <property name="jobClass" value="${project.basePackage}.job.MemberAddressRegistrationRefreshJob" />
                <property name="jobDataAsMap">
                    <map>
                        <entry key="memberAddressRegistrar">
                            <ref bean="DiscoverySPI.${moduleId}.core.MemberAddressRegistrar" />
                        </entry>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="DiscoverySPI.${moduleId}.core.credentials" abstract="true" class="org.apache.ignite.plugin.security.SecurityCredentials">
        <property name="login" value="\${${moduleId}.core.login}" />
        <property name="password" value="\${${moduleId}.core.password}" />
    </bean>

    <bean id="AddressResolver.${moduleId}.core" abstract="true"
        class="${aldica.ignite-common.basePackage}.discovery.GridAddressResolutionManager">
        <property name="configuration" ref="Configuration.${moduleId}.core" />
        <property name="externalHost" value="\${${moduleId}.core.public.host}" />
        <property name="externalDiscoPortBase" value="\${${moduleId}.core.public.disco.port}" />
        <property name="externalCommPortBase" value="\${${moduleId}.core.public.comm.port}" />
        <property name="externalTimePortBase" value="\${${moduleId}.core.public.time.port}" />
    </bean>

    <bean id="CommunicationSPI.${moduleId}.core" abstract="true" class="org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi">
        <property name="localPort" value="\${${moduleId}.core.local.comm.port}" />
        <property name="localPortRange" value="\${${moduleId}.core.local.comm.portRange}" />

        <property name="connectTimeout" value="\${${moduleId}.core.local.comm.connectTimeout}" />
        <property name="maxConnectTimeout" value="\${${moduleId}.core.local.comm.maxConnectTimeout}" />
        <property name="socketWriteTimeout" value="\${${moduleId}.core.local.comm.socketWriteTimeout}" />
        <property name="connectionsPerNode" value="\${${moduleId}.core.local.comm.connectionsPerNode}" />
        <property name="filterReachableAddresses" value="\${${moduleId}.core.local.comm.filterReachableAddresses}" />

        <property name="messageQueueLimit" value="\${${moduleId}.core.local.comm.messageQueueLimit}" />
    </bean>

    <bean id="CollisionSPI.${moduleId}.core" abstract="true" class="org.apache.ignite.spi.collision.fifoqueue.FifoQueueCollisionSpi" />

    <bean id="PluginProvider.${moduleId}.core.security" abstract="true"
        class="${aldica.ignite-common.basePackage}.plugin.SimpleSecurityPluginProvider">
        <property name="configuration" ref="PluginConfiguration.${moduleId}.core.security" />
    </bean>

    <bean id="PluginConfiguration.${moduleId}.core.security" abstract="true"
        class="${aldica.ignite-common.basePackage}.plugin.SimpleSecurityPluginConfiguration">
        <property name="enabled" value="true" />
        <property name="allowedNodeCredentials">
            <list>
                <ref bean="DiscoverySPI.${moduleId}.core.credentials" />
            </list>
        </property>
        <property name="nodeTierAttributeKey" value="${moduleId}.tier" />
        <property name="allowedNodeTierAttributeValues">
            <list>
                <value>repository</value>
            </list>
        </property>
    </bean>

    <bean id="Misc.${moduleId}.core.logger" abstract="true" class="org.apache.ignite.logger.slf4j.Slf4jLogger" />
</beans>
